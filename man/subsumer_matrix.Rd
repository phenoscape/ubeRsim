% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subsumers.R
\name{subsumer_matrix}
\alias{subsumer_matrix}
\title{Obtains a subsumer matrix}
\usage{
subsumer_matrix(
  terms,
  .colnames = c("ID", "IRI", "label"),
  .labels = NULL,
  preserveOrder = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{terms}{character, the list of terms as IRIs for which to compute the subsumer
matrix.}

\item{.colnames}{character, how to name the columns of the resulting
matrix.
\itemize{
\item \code{"ID"} (the default): use the term IDs (the last component of the
term IRIs).
\item \code{"IRI"}: use the term IRIs.
\item \code{"label"}: use the terms' labels (see \code{.labels} parameter).
}}

\item{.labels}{character, the labels for terms. Only used if
\code{.colnames = "label"}, and then must have the same length and ordering
as \code{terms}.}

\item{preserveOrder}{logical, whether to return columns in the same
order as \code{terms}. The default is not to preserve the order.}

\item{verbose}{logical, whether to print informative messages about certain
potentially time-consuming operations.}
}
\value{
A matrix representing the subsumer matrix

The matrix will have additional attributes depending on the choice of how to
name rows and columns. If \code{.colnames = "ID"} (the default), the matrix will have
an attribute \code{prefixes} giving the URL prefixes removed from the term IRIs
to yield the IDs, in the order of the rows. If \code{.colnames = "label"}, it will
have attribute \code{term.iris}, giving the term IRIs for the rows (and columns).
Note that these extra attributes will be lost upon subsetting the returned
matrix.
}
\description{
A subsumer matrix M for terms \eqn{j \in \{1, \dots, n\}}{j in {1, ..., n}}
has value \eqn{M_{i,j}=1}{M[i,j] = 1} iff class \emph{i} (which can be an anonymous class expression) subsumes term \emph{j}, and zero
otherwise. Therefore, it will have \emph{n} columns, one for each term.
}
\details{
In this implementation, for each row \emph{i}
\eqn{\sum_{j=1}^{n}M_{i,j} > 0}{sum(M[i, 1:n] > 0}. That is, each row
will have at least one non-zero value, which means that the number of classes
\emph{not} subsuming a term will be highly incomplete, because the (usually
very many) classes not subsuming any of the terms will not be included. This
subsumer matrix is thus only useful for similarity metrics for which
non-subsuming terms can be ignored.
}
\examples{
tl <- c("http://purl.obolibrary.org/obo/UBERON_0000981",
        "http://purl.obolibrary.org/obo/UBERON_0002103",
        "http://purl.obolibrary.org/obo/UBERON_0000976",
        "http://purl.obolibrary.org/obo/UBERON_0002102")
m <- subsumer_matrix(tl)
m[1:5,] # term IDs as column names
attr(m, "prefixes") # 4x "http://purl.obolibrary.org/obo/"

m <- subsumer_matrix(tl, .colnames = "label")
m[1:5,] # term labels as column names
attr(m, "term.iris") # term IRIs in the same order as columns
}
\references{
Adapted from and originally developed as part of the \href{https://rphenoscape.phenoscape.org}{Rphenoscape}
package.
}
